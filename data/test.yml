# 请完善此文件中每个字段的生成规则
# 规则说明：
# package: 动态导包，在下方字段使用了jinja2模板且在模板语法中使用了非Python基础库时需要在此动态声明导入需要的包;使用示例:
# package:
#  - datetime  # 引入datetime包，可在后续的jinja2模板中使用
#  - os

# env: 可在此处预生成环境变量，给下方字段生成时引用；描述方式如下：
# env:
#  name:  # 全局变量名称
#    engine: eq  # 生成规则方法，与下面的字段生成方法一样。也可不需要下方的rule参数，直接在engine后面写参数：例如：eq('test')
#    rule:  # "engine"方法中接收的参数; 当engine中包含"()"时此参数将不会生效。
#      value: 'test'

# tables： 该字段描述了表字段的生成规则，需要填写数据库字段中的engine与rule字段，为空时数据库字段也为空；示例(给数据库中t_sys_user表中age字段生成从40到80的随机数)：
# tables:
# - table: t_sys_user
#   comment: 用户表
#   columns:
#   - column: age  # 数据库中字段名
#     comment: '年龄'  # 字段备注信息
#     engine: randint  # 生成字段值调用的方法，必须是faker库中存在或者自行注册到faker库中的方法。也可不需要下方的rule参数，直接在engine后面写参数：例如：randint(value=[40,80])
#     rule:  # 当engine中包含"()"时此参数将不会生效。
#        value: [40, 80]  # 上述方法中接收到的参数

# extraction： 该字段描述了需要从生成字段中提取哪些变量来返回，写自动化测试用例时可能会用到；举例：
# extraction：
#   user_name:
#     value: '{{ t_sys_user.name }}'  # 返回上面生成的用户姓名
#     default: '测试用户'  # 可指定默认值，在上述字段不存在或者为空时返回默认值
#   user_id:
#     value: '{{ t_sys_user.id }}'


package: []
env:
  name:
    engine: name
tables:
- table: stu
  comment: null
  columns:
    id:
      comment: 自增id
      engine: uuid()
    name:
      comment: 学生名字
      engine: name
    school:
      comment: 学校名字
      engine: eq('二小学校')
    nickname:
      comment: 学生小名
      engine: name
    age:
      comment: 学生年龄
      engine: randint(value=[8,12])
    class_num:
      comment: 班级人数
      engine: randint([30,60])
    score:
      comment: 成绩
      engine: randint([40,100])
    phone:
      comment: 电话号码
      engine: phone_number
    email:
      comment: 家庭网络邮箱
      engine: email
    ip:
      comment: IP地址
      engine: ipv4
    address:
      comment: 家庭地址
      engine: address
- table: course
  comment: null
  columns:
    id:
      comment: null
      engine: uuid
    name:
      comment: null
      engine: choice(['语文','数学','英语','化学','生物','地理'])
    grade:
      comment: null
      engine: choice(['一年级','二年级','三年级','四年级','五年级','六年级'])
    teacher:
      comment: null
      engine: name
  max_number: 1
- table: choice_course
  comment: null
  columns:
    id:
      comment: null
      engine: uuid
    stu_id:
      comment: null
      engine: eq("{{ stu.id }}")
    course_id:
      comment: null
      engine: eq('{{ course.id }}')
    time:
      comment: null
      engine: choice(['星期一','星期二','星期三','星期四','星期五'])
extraction:
  stu_name:
    engine: eq('{{ stu.name }}')
  stu_nickname:
    engine: eq('{{ stu.nickname }}')
